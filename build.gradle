plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'dev.felnull'
archivesBaseName = "voxelshape-generator-library"
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'voxelshape-generator-library'
            from components.java
            pom {
                name = 'VoxelShapeGeneratorLibrary'
                description = 'Library for generating Minecraft voxel shapes from models'
                url = 'https://github.com/TeamFelnull/'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'FelNull'
                        name = 'TeamFelNull'
                        email = 'teamfelnull@m.servg.red'
                    }
                    developer {
                        id = 'MORIMORI0317'
                        name = 'MORIMORI0317'
                    }
                }
                scm {
                    connection = 'git@github.com:TeamFelnull/VoxelShapeGeneratorLibrary.git'
                    developerConnection = 'git@github.com:TeamFelnull/VoxelShapeGeneratorLibrary.git'
                    url = 'https://github.com/TeamFelnull/VoxelShapeGeneratorLibrary'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = "${sonatypeUsername}"
                password = "${sonatypePassword}"
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}
